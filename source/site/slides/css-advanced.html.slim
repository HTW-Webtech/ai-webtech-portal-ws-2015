section
  section
    h2 Agenda
    ul
      li.fragment CSS Rendering
      li.fragment Box Model
      li.fragment Layouting the old/current way
      li.fragment Layouting the new way
      li.fragment CSS Transitions
      li.fragment CSS Transformations

section
  section
    h2 CSS Normalize vs Reset
    ul
      li.fragment Jeder Browser bringt seine Default-Styles mit
      li.fragment
        | Probleme:
        ul
          li.fragment margin/padding sind unterschiedlich
          li.fragment Schriftgr√∂√üen (h1, h2, ‚Ä¶) unterscheiden sich
      li.fragment 1. Ansatz: Reset via <a href="http://meyerweb.com/eric/tools/css/reset/">reset.css</a>
      li.fragment= slide_image_tag 'css-advanced/reset-css.png'
      li.fragment 2. Ansatz: Normalize via <a href="https://necolas.github.io/normalize.css/">normalize.css</a> üåü

  section
    h2 CSS Box Model
    ul
      li.fragment
        | Jedes HTML-Element ist ein Rechteck mit folgenden Eigenschaften
        ul
          li.fragment width x height (Innhaltsbereich: content box)
          li.fragment padding (Innenabstand von Inhalt zum Rand)
          li.fragment border (Der Rand einer Box, kann auch 0 sein)
          li.fragment margin (Au√üenabstand einer Box)

  section
    h2 CSS Box Model Beispiel
    = slide_image_tag 'css-advanced/box-model.png'

  section
    h2 CSS Box Model im Google Chrome

  section
    h2 CSS Property: box-sizing
    ul
      li.fragment Grunds√§tzlich 2 Arten die Breite zu berechnen
      li.fragment Eigenschaft: box-sizing
      li.fragment Default: border-box vs IE6: content-box
      li.fragment= cssdeck_snippet 'ybjxl2yr'

  section
    h2 CSS Stacking Context
    ul
      li.fragment Dritte Dimension in CSS (z-Achse oder z-index)
      li.fragment Grundregel: Kinder-Element liegen "h√∂her" als Eltern-Elemente
      li.fragment Idee: Man m√∂chte Elemente *in den Hintergrund* legen
      li.fragment L√∂sung: Man nutzt den z-index
    .fragment= slide_image_tag 'css-advanced/stacking-context.png'

  section
    h2 Elemente-Fluss (Flow)
    p.fragment Alle* Elemente folgenden dem Flow (Elemente-Fluss)
    .fragment= cssdeck_snippet '9wcxbmix'

  section
    h2 CSS Property: display
    ul
      li.fragment display steuert das Verhalten der Elemente im Flow
      li.fragment display: inline | block | inline-block | none | ‚Ä¶ | grid | flex
      li.fragment inline: Nur so breit/hoch wie Inhalt (Text/Bild) vorgibt
      li.fragment block: Nimmt volle verf√ºgbare Breite des Parents ein
      li.fragment inline-block: So breit/hoch wie Inhalt. Manipulierbar
      li.fragment none: Element wird nicht gerendert
      li.fragment weitere: ‚Ä¶ table, table-caption, table-group, ‚Ä¶
      li.fragment grid: (experimentelles Grid-Layout) Nur IE: 8% global Support
      li.fragment flex: (Flexbox Layout) Sp√§ter mehr dazu

  section
    h2 CSS Property: display Code
    = cssdeck_snippet 'ajnhujyy'

  section
    h2 CSS Property: position
    ul
      li.fragment position beeinflusst die Position und Orientierung von Elemente
      li.fragment Positionierung via: top | left | right | bottom
      li.fragment static: Das Standard-Verhalten, ignoriert z-index
      li.fragment relative: Positionierbar. Ber√ºcksichtigt z-index. Rahmen f√ºr absolute. Flow bleibt.
      li.fragment absolute: Positionierbar relativ zu parent (!= static)
      li.fragment fixed: Positionierbar relativ zum Viewport des Browsers.

  section
    h2 CSS Property: position Code
    = cssdeck_snippet 'vhegcrx1'

  section
    h2 CSS Property: float
    ul
      li.fragment Floating-Elemente werden aus dem Flow entfernt
      li.fragment float: left | right
      li.fragment text und inline-Elemente umflie√üen float-Elemente
      li.fragment Floating-Elemente verhalten sich wie Block-Elemente (margin, ‚Ä¶)

    .fragment= slide_image_tag 'css-advanced/floating-images.png'

  section
    h2 CSS Property: float #2
    ul
      li.fragment Beliebtes Werkzeug f√ºr Layouts
      li.fragment Float-Verhalten kann jedoch komplex sein
      li.fragment Bspw. Clearing
    .fragment= cssdeck_snippet 'hrgwwkak'

  section
    h2 Layout mit Floats
    p.fragment Dynamisches Layout mit Problemen
    .fragment= cssdeck_snippet 'xa6rghqn'

  section
    h2 The Flexbox way
    ul
      li.fragment Neuer Ansatz: Flexible Box Layout oder: Flexbox
      li.fragment W3C: Flexible Layout Module Level 1 (<a href="http://www.w3.org/TR/css-flexbox-1/">seit 2009</a>)
      li.fragment Flex-Container und Flex-Items mit 2-Achsen (main, cross)
    .fragment= slide_image_tag 'css-advanced/flexbox-layout.png'

  section
    h2 Flexbox Beispiel
    p Identisches Markup zum Float-Beispiel
    = cssdeck_snippet 'vbfwlhpw'

  section
    h2 Flexbox Konfiguration
    ul
      li.fragment display: flex
      li.fragment flex-direction: row | column | row-reversed | column-reversed
      li.fragment flex: n | n px | n %
      li.fragment align-items: flex-start | flex-end | center | space-between | space-aroud ‚Ä¶

section
  section
    h2 Responsive Web Design
    ul
      li.fragment Neue Ger√§teklassen = Neue Herausforderungen
      li.fragment Bildschirmgr√∂√üe: Layout
      li.fragment Touch statt Pointer: kein Hover
      li.fragment Orientation: Landspace vs Portrait
      li.fragment Bandbreite: GPRS, Edge, ‚Ä¶
      li.fragment Browser: Android, Opera Mini, ‚Ä¶

  section
    h2 Media Queries
    ul
      li.fragment W3C: Media Queries (<a href="http://www.w3.org/TR/css3-mediaqueries/">seit 2012</a>)
      li.fragment Konditionale f√ºr CSS Regeln
      li.fragment @media KONDITION { CSS-CODE }
      li.fragment Konditionen: min-width | screen | orientation ‚Ä¶
    .fragment= code_block
      | <link rel="stylesheet" media="(max-width: 800px)" href="example.css" />
        <style>
          @media (max-width: 800px) {
            .ads {
              display: none;
            }
          }
        </style>

  section
    h2 Media Query Beispiel
    = cssdeck_snippet 'rjp1hs2o'

section
  section
    h2 CSS Transitions
    ul
      li.fragment W3C: CSS Transitions (<a href="http://www.w3.org/TR/css3-transitions/">seit 2013</a>)
      li.fragment √Ñndern der Darstellung via CSS animiert statt prompt
      li.fragment transition-property: width (Limitierung von Eigenschaften)
      li.fragment transition-duration: 2s
      li.fragment transition-delay: 2s (Limitierung von Eigenschaften
      li.fragment transition: <property> <duration> <timing-function> <delay>

  section
    h2 CSS Transitions Beispiel
    = cssdeck_snippet 'g6jgcnw1'

  section
    h2 CSS Tansforms
    ul
      li.fragment W3C: CSS Transforms Module Level 1 (<a href="http://www.w3.org/TR/css3-transforms/">seit 2013</a>)
      li.fragment Manipulation der Koordinaten im 3D-Raum
      li.fragment Elemente-Flow bleibt erhalten

  section
    h2 CSS Tansforms Beispiel
    = cssdeck_snippet 'lmo06z1r'

section
  section
    h2 Done
