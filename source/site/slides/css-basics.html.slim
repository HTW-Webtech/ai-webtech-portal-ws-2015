section

  section
    h2 CSS
    ul
      li.fragment <em>C</em>ascacding <em>S</em>tyle <em>S</em>heets
      li.fragment HTML beschreibt den Inhalt eines Dokumentes
      li.fragment CSS beschreibt die Pr√§sentation eines HTML/XML-Dokumentes
      li.fragment Beispiel: <a href="http://www.csszengarden.com/">CSS Zengarden</a>

  section
    h2 Syntax
    = slide_image_tag 'css-basics/selector.png'
    ul
      li.fragment Der Selektor addressiert die Elemente auf welche sich die Regeln beziehen
      li.fragment Die Regeln beeinflussen die Darstellung des Browsers

  section
    h2 Einfaches Beispiel
    = cssdeck_snippet 'cogy1xxq'

  section
    h2 Syntax: CSS Selektor-Arten
    ul
      li.fragment Problem: Wie adressiere ich die Elemente meines Dokuments? L√∂sung: Selektoren
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#type-selectors">(Element) Type-Selektoren</a>: h1, p, li
      li.fragment ‚ö†Ô∏è <a href="http://www.w3.org/TR/css3-selectors/#id-selectors">ID-Selektoren</a>: #navigation, #footer, #submit-order
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#class-html">Class-Selektoren</a>: .logo, .button, .call-to-action
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">Pseudo-Class-Selektoren</a>: :hover, :active, :first-child
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">Attribute-Selektoren</a>: [target=_blank], [href^=mailto], [checked=true]
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#pseudo-elements">Pseudo-Element-Selektoren</a>: ::first-letter, ::first-line
      li.fragment <a href="http://www.w3.org/TR/css3-selectors/#combinators">Kombinations-Selektoren</a>: nav a, nav > a, h1 + p

  section
    h2 Class-Selektoren
    = cssdeck_snippet '0t9yxb6k'

  section
    h2 Attribut-Selektoren
    = cssdeck_snippet 'uyxabcye'

  section
    h2 Pseudo-Class-Selektoren
    p
      | :active, :hover, a:visited, checkbox:checked
    = cssdeck_snippet 'on0cclrr'

  section
    h2 Pseudo-Element-Selektoren
    p
      | ::before und ::after
    = cssdeck_snippet 'xtqwae6l'

  section
    h2 Kombinations-Selektoren
    p
      | a > b, a + b, a ~ b
    p √úbernommen von Beier (<a href="https://beier.f4.htw-berlin.de/presentations/css/">Unterlagen: Webentwicklung</a>)
    = cssdeck_snippet 'qf5aqlnv'

  section
    h2 Cascading: Grundlagen
    ul
      li.fragment
        | Verschiedene priorisierte Style-Quellen
        ol
          li.fragment Browser-defaults
          li.fragment wird √ºberschrieben von User-styles (Google Chrome hat User-styles <a href="http://src.chromium.org/viewvc/chrome?revision=234007&view=revision">entfernt</a>)
          li.fragment wird √ºberschrieben von <strong>Document-styles</strong> üéØ  (Diese k√∂nnen wir beeinflussen)

  section
    h2 Cascading: Vererbung
    ul
      li.fragment Die Reihenfolge ist wichtig. Der letzte gewinnt*.
      li.fragment= cssdeck_snippet 'lla1ly1a'

  section
    h2 Cascading: Spezifizit√§t
    ul
      li.fragment M√§chtiges (und komplexes) Regelwerk f√ºr die Priorisierung von Regeln
      li.fragment
        | Grundlegende Ordnung
        ul
          li.fragment Je spezifischer/genauer ein Selektor, desto wichtiger ist er
          li.fragment Selektoren k√∂nnen kombiniert werden. Ein Tag kann mehrere CSS-Klassen haben
          li.fragment Je mehr CSS-Klassen von einem Selektor adressiert werden, desto spezifischer ist er, desto h√∂her ist seine Priorit√§t
    = code_block
      | <body>
         <div class="notice important">This is a very important message</div>
        </body>

  section
    h2 Cascading: Spezifizit√§t Beispiel
    = cssdeck_snippet 'pvecsyea', show: 'html,css'

  section
    h2 CSS mit HTML verkn√ºpfen
    ul
      li.fragment Verschiedene Arten CSS mit einem HTML-Dokument zu verkn√ºpfen
      li.fragment Teil des HTML-Dokument vs. Extern (include via @import oder link-Tag)
      li.fragment Es gibt Front End Frameworks die CSS aus (guten) technischen Gr√ºnden im HTML embedden
      li.fragment
        | Im Normalfall wird CSS jedoch getrennt vom HTML-Dokument gepflegt
        ul
          li.fragment Wiederverwendbarkeit von CSS
          li.fragment Separates Browser-Caching f√ºr HTML und CSS

  section
    h2 CSS include via link-Tag
    p HTML:
    = code_block
      | <html>
          <head>
            <link rel="stylesheet" type="text/css" media="screen" />
          </head>
          <body>
            <p>Text</p>
          </body>
        </html>

    p CSS:
    = code_block language: 'css'
      | p {
          color: grey;
        }

  section
    h2 CSS include: Media Types
    = code_block
      | <html>
          <head>
            <link rel="stylesheet" type="text/css" media="screen, print, tv, tty" />
          </head>
          <body>
            <p>Text</p>
          </body>
        </html>
    ul
      li.fragment
        | Unterst√ºtzt verschiedene Ausgabe-Medien <a href="http://www.w3.org/TR/CSS21/media.html">(W3C: Media Types)</a>, u.a.:
        ul
          li.fragment handheld: Bildschirm auf mobilen Endger√§ten (‚ö° <a href="http://meiert.com/en/blog/20090630/handheld-media-type-rip/">Kein Support</a>)
          li.fragment speech: "Intended for speech synthesizers."
          li.fragment ‚Ä¶ einige mehr die man selten/nie sieht: braille, tv, tty, projection, ‚Ä¶
          li.fragment print: Druckvorschau, Druck
          li.fragment screen: Quasi der Standard

section
  section
    h2 Pause: Ein bisschen Geschichte
    ul
      li.fragment CSS definiert heutzutage eine F√ºlle an Features. Wie kam es dazu?
      li.fragment <a href="http://www.w3.org/People/howcome/p/cascade.html">1994: Proposal von H√•kon W Lie</a>
      li.fragment <a href="http://www.w3.org/Style/LieBos2e/history/Overview.html">1996: CSS Level 1 ver√∂ffentlicht</a>
      li.fragment <a href="http://www.w3.org/Style/LieBos2e/history/Overview.html">1997: Gr√ºnding einer CSS Working-Group innerhalb W3C</a>
      li.fragment <a href="http://www.w3.org/standards/history/CSS2">1998: CSS Level 2 ver√∂ffentlicht</a>
      li.fragment <a href="http://www.w3.org/standards/history/CSS2">2011: CSS Level 2 rev1 ver√∂ffentlicht</a>
      li.fragment 13 Jahre zwischen CSS 2 und 2.1
      li.fragment Seitdem modulare L√∂sung

    aside.notes
      | 158 CSS-Properties aktuell laut css-tricks.com
      / $('.almanac-list.property-list.group .page_item')

  section
    h2 CSS 3 Modules
    = slide_image_tag 'css-basics/css3-modules.png'


  section
    h2 CSS 3 Module: Beispiele
    ul
      li.fragment
        a href="http://www.w3.org/TR/css3-color/" Color Module:
        ul
          li.fragment Color-Units: <abbr title="red, green, blue">rgb</abbr>, <abbr title="hue, saturation, lightness">hsl</abbr>
          li.fragment Extended color keywords: <span style="color: green">green</span>, <span style="color: magenta">magenta</span>, <span style="color: mediumaquamarine">mediumaquamarine</span>
      li.fragment
        a href="http://www.w3.org/TR/css3-flexbox/" Flexible Box Layout:
        ul
          li.fragment= slide_image_tag 'css-basics/css3-flexbox-example.png'

section
  section
    h2 Ressourcen
    ul
      li: a href="http://www.lynda.com/Web-Interactive-CSS-tutorials/CSS-Fundamentals/80436-2.html" Lynda: CSS Fundamentals
      li: a href="http://www.lynda.com/CSS-tutorials/CSS-Selectors/192036-2.html" Lynda: CSS Selectors
      li: a href="http://www.lynda.com/Web-Interactive-CSS-tutorials/CSS-Core-Concepts/80435-2.html" Lynda: CSS: Core Concepts

  section
    h1 Done
